#:kivy 1.1.0
#: import Button kivy.uix.button.Button
#:import F kivy.factory.Factory
#:import partial functools.partial

<MainFloatLayout>:
        id: mainfloat
                
        BoxLayout:
                orientation:"horizontal"
                size_hint: 1, 1
                BoxLayout:
                        orientation:"vertical"
                        size_hint: 0.065, 1
                        spacing: 0      
                        MyIconButton:
                                text: 'File'
                                source: "icons/image_viewer.png"
                                on_release: dropdown_file.open(tool_bar)
                                on_parent: dropdown_file.dismiss()   
                                background_color: 51/255,83/255,158/255,1
                                DropDown:
                                        id: dropdown_file
                                        size: 150, 30
                                        size_hint: None, None
                                        on_select: dd_btn.text = '{}'.format(args[1])
                                        pos: tool_bar.pos
                                        MyColorButton:
                                                size_hint_y: None
                                                height: '48dp'
                                                text: 'Save Image' 
                                                on_release: root.show_extraer_popup('Save Image')
                                                on_press: dropdown_file.dismiss()
                                        MyColorButton:
                                                text: 'Save Workspace'
                                                on_press: root.show_extraer_popup('Save Workspace')
                                                on_press: dropdown_file.dismiss()
                                                size_hint_y: None
                                                height: '48dp'
                                        MyColorButton:
                                                text: 'Open Workspace'
                                                on_press: root.parent.manager.current = 'saved screen'
                                                on_press: dropdown_file.dismiss()
                                                size_hint_y: None
                                                height: '48dp'
                                        MyColorButton:
                                                text: 'New Workspace'
                                                on_press: root.parent.manager.current = 'main screen'
                                                on_press: dropdown_file.dismiss()
                                                size_hint_y: None
                                                height: '48dp'                           
                        MyIconButton:
                                text: 'Export Code'
                                source: "icons/export_code.png"   
                                background_color: 51/255,83/255,158/255,1
                                on_press: root.show_extraer_popup('Export Code')
                        MyIconButton:
                                text: 'Image Viewer'
                                source: "icons/image_viewer.png"   
                                background_color: 51/255,83/255,158/255,1
                                on_release: root.image_viewer()
                        MyIconButton:
                                text: 'Clear Screen'
                                source: "icons/clear_screen.png"   
                                background_color: 51/255,83/255,158/255,1
                                on_release: root.clear_screen()
                        MyIconButton:
                                text: 'Run Pipe'
                                source: "icons/play_lime.png"   
                                background_color: 51/255,83/255,158/255,1
                                on_release: root.find_pipes()
                 
                FloatLayout:
                        id: bloques_box
                        size_hint: 0.935, 1
                        canvas:
                                Rectangle:
                                        pos: self.pos
                                        size: self.size
                                        source:"icons\\background_mainfloat.png"   
                        FilterDDTrigger:
                                id: tool_bar
                                text: 'Search function'
                                size: 150, 30
                                size_hint: None, None
                                pos_hint: {"x": 0.015, "top": .95}
                                dropdown:                                        
                                        F.FilterDD(dismiss_on_select = False)        

<MyScatterLayout>:
        BoxLayout:
                id: scatter_box
                spacing: 5
                canvas.before:     
                        Color:
                                rgba: 1,1,1,1
                                #rgba: 165/255,103/255,142/255,1
                        Line:
                                width: 0.000000001 if root.isShownMenu else 1
                                rounded_rectangle: self.x+30, self.y+self.height-30, self.width-60, 30, 8, 20
                
                BoxLayout:
                        orientation: "vertical"
                        id: inputs 
                        spacing: 4
                        #opacity: 1 if root.isShownMenu else 0
                        size_hint: .2, 0   
                        pos_hint: {'x': 0, 'y': 0.35} if root.isShownMenu else {'x': 0, 'y': 0.75}                   
                BoxLayout:
                        orientation: "vertical"
                        size_hint: .8, 1
                        BoxLayout:
                                orientation:"horizontal"
                                size_hint: 1,.2
                                
                                MyButton: #para que no funcione touch down
                                        
                                        id: funcion_scatter
                                        background_color: 0,0,0,0
                                        halign: 'center'
                                        valign: 'center'
                                        text_size: self.size 
                                        font_size: '12'
                                        size_hint: .4,1
                                        
                                Button:
                                        id: button_size
                                        background_color: 0,0,0,0
                                        size_hint: .15,1
                                        
                                        #on_release: context_menu.show()
                                        #on_release: context_menu.show(*app.root_window.mouse_pos)
                                        #on_press: root.change_size()
                                        on_press: root.isShownMenu = not root.isShownMenu
                                        on_release: minimize.source = "icons/minimize.png" if root.isShownMenu else "icons/maximize.png"
                                        on_touch_move: root.update_line(root)
                                        on_touch_up: root.update_line(root)
                                        on_touch_down: root.update_line(root) 
                                        Image:
                                                id: minimize
                                                source: "icons/minimize.png"
                                                center_x: self.parent.center_x
                                                center_y: self.parent.center_y
                                                size: 20,20
                                Button:
                                        size_hint: .15,1
                                        background_color: 0,0,0,0
                                        on_press: root.delete_scatter(root)
                                        on_touch_move: root.update_line(root)
                                        on_touch_up: root.update_line(root)
                                        on_touch_down: root.update_line(root)
                                        Image:
                                                id: cancel
                                                source: "icons/cancel.png"
                                                center_x: self.parent.center_x
                                                center_y: self.parent.center_y
                                                size: 20,20
                                       
                        MyButton:
                                id: mybutton
                                background_color: 0,0,0,0
                                opacity: 1 if root.isShownMenu else 0
                                canvas.before:
                                        #Color:
                                                #rgba: 150/255,78/255,194/255,1
                                                #rgba: 165/255,103/255,142/255,1
                                        RoundedRectangle:
                                                pos: self.pos
                                                size: self.size
                                                radius: [8]
                                                source:"icons\\background_myscatter.png" 
                                        Color:
                                                rgba: 165/255,103/255,142/255,1
                                        Line:
                                                width: 0.5
                                                rounded_rectangle: self.x, self.y, self.width, self.height, 8, 20
                                size_hint: 1,.8 
                                on_touch_move: root.update_line(root)
                                on_touch_up: root.update_line(root)
                                on_touch_down: root.update_line(root)
                                Image:
                                        id: image_scatter
                                        size: mybutton.size 
                                        pos: mybutton.pos
                                        source: ""
                                        color: 0,0,0,0               
                BoxLayout:
                        orientation: "vertical"
                        #opacity: 1 if root.isShownMenu else 0
                        id: outputs  
                        spacing: 4  
                        size_hint: .2, 0
                        pos_hint: {'x': 0.75, 'y': 0.35} if root.isShownMenu else {'x': 0.75, 'y': 0.75}   
        BoxLayout:
                orientation: "vertical"
                #no se usa, lo dejo por las dudas
                #ContextMenu:
                 #       id: context_menu
                  #      visible: False
                   #     cancel_handler_widget: scatter_box
                    #    pos_hint: {'x': 0.5, 'y': 0.5}
                        
                     #   ContextMenuTextItem:
                      #          text: "Duplicate"
                       #         on_release: root.duplicate()
                                                    
                        #ContextMenuTextItem:
                        #        text: "Edit outputs"
                        #        on_release: root.add_outputs(root)


<SavedFloatScreen>:
        on_enter: root.fileload()
        MainFloatLayout:


<MenuScreen>:
        canvas.before:
                Rectangle:
                        pos: self.pos
                        size: self.size
                        source:"icons\\background_menuscreen.png"
        BoxLayout:
                
                size_hint: None, None
                size: 350, 100
                center: root.center
                orientation: 'vertical'
                Label:
                        text: "ProtoPype"
                        font_name: "Roboto"
                        bold: True
                        font_size:'20sp'
                        Image:
                                source:"icons\\pipe.png"
                                center_x: self.parent.center_x + 60
                                center_y: self.parent.center_y
                                size: 25,25
                Label:
                        size_hint: 0.1,0.3 
                Button:
                        text: 'New'
                        font_name: "Roboto"
                        on_press: root.manager.current = 'main screen'
                        halign: 'center'
                        valign: 'center'
                        background_color: 0,0,0,0
                        canvas.before:                
                                Color:
                                        rgba: 165/255,103/255,142/255,0.5
                                RoundedRectangle:
                                        pos: self.pos
                                        size: self.size
                                        radius: [8]
                                Color:
                                        rgba: 165/255,103/255,142/255,0.5
                                        #root.line_color
                                Line:
                                        width: 0.5
                                        rounded_rectangle: self.x, self.y, self.width, self.height, 8, 100
                        Image:
                                source:"icons\\new.png"
                                center_x: self.parent.center_x - 34
                                center_y: self.parent.center_y
                                size: 25,25
                Label:
                        size_hint: 0.1,0.3  
                Button:
                        text: 'Open'
                        font_name: "Roboto"
                        on_press: root.manager.current = 'saved screen'
                        halign: 'center'
                        valign: 'center'
                        background_color: 0,0,0,0
                        canvas.before:                
                                Color:
                                        rgba: 165/255,103/255,142/255,0.5
                                RoundedRectangle:
                                        pos: self.pos
                                        size: self.size
                                        radius: [8]
                                Color:
                                        rgba: 165/255,103/255,142/255,0.5
                                        #root.line_color
                                Line:
                                        width: 0.5
                                        rounded_rectangle: self.x, self.y, self.width, self.height, 8, 100
                        Image:
                                source:"icons\\open.png"
                                center_x: self.parent.center_x - 34
                                center_y: self.parent.center_y
                                size: 23,23

<Parameters_Popup>:
        BoxLayout:
                orientation:"vertical"
                pos_hint: {"x": 0, "top": 1}
                id: parameters_popup
                BoxLayout:
                        orientation:"horizontal"
                        size_hint: 1, .9
                        id:boxlay                        
                        TabbedPanel:
                                size_hint: .5, 1
                                do_default_tab: False
                                TabbedPanelItem:
                                        id: panelitem
                                        text: 'Parameters'
                                        background_normal: ''
                                        background_down: ''
                                        background_disabled_normal: ""
                                        background_disabled_down: ""
                                        background_color: 51/255,83/255,158/255,1
                                        BoxLayout:
                                                canvas.before:                
                                                        #Color:
                                                         #       rgba: 232/255,183/255,212/255,1
                                                        Rectangle:
                                                                pos: self.pos
                                                                size: self.size    
                                                                source:"icons\\background_myscatter.png"                                     
                                                orientation: "vertical"
                                                id: variable_box                                                
                                TabbedPanelItem:
                                        text: 'Opcional'
                                        background_normal: ''
                                        background_down: ''
                                        background_disabled_normal: ""
                                        background_disabled_down: ""
                                        background_color: 51/255,83/255,158/255,1
                                        
                                        BoxLayout:
                                                canvas.before:                
                                                        Rectangle:
                                                                pos: self.pos
                                                                size: self.size    
                                                                source:"icons\\background_myscatter.png" 
                                                orientation: "vertical"
                                                Label:
                                                        text: "Input:"
                                                        height: 20
                                                        size_hint: 1, .1                                               
                                                BoxLayout:
                                                        orientation: "vertical"
                                                        id: opcional_checkbox_input
                                                        size_hint: .8, .4    
                                                        pos_hint: {'center_x':0.5}                                                            
                                                        canvas.after:
                                                                Color:
                                                                        rgba: 0.2, 0.71, 0.9, 1
                                                                Line:
                                                                        width: 1
                                                                        rounded_rectangle: self.x, self.y, self.width, self.height, 8, 100                                                                                         
                                                Label:
                                                        text: "Output:"
                                                        height: 20
                                                        size_hint: 1, .1
                                                BoxLayout:
                                                        orientation: "vertical"
                                                        id: opcional_checkbox_output
                                                        size_hint: .8, .4               
                                                        pos_hint: {'center_x':0.5}                                                
                                                        canvas.after:
                                                                Color:
                                                                        rgba: 0.2, 0.71, 0.9, 1
                                                                Line:
                                                                        width: 1
                                                                        rounded_rectangle: self.x, self.y, self.width, self.height, 8, 100
                        BoxLayout:
                                orientation: "vertical"
                                size_hint: .5, 1
                                spacing: 0
                                MyIconButtonLeft:
                                        id: btn_try_parametros
                                        size_hint: None, None
                                        size: panelitem.size
                                        pos_hint: {'right': 1, 'center_y':.5}
                                        text: "Try"
                                        text_size: self.width - dp(10), self.height - dp(10)
                                        on_press: root.try_parameters()
                                        source: "icons/play_lime.png"   
                                Image:
                                        id: image_popup
                                        size_hint: 1, .9
                                        source: ""
                                        color: 0,0,0,0
                                                
                BoxLayout:
                        orientation: "horizontal"
                        size_hint: 1, .12
                        spacing: 0
                        MyIconButtonLeft:
                                id: btn_restore_parametros
                                size_hint: 0.9, 0.9
                                text: "Default"
                                text_size: self.width - dp(10), self.height - dp(10)
                                on_press: root.restore_parameters()
                                source: "icons/restore.png"                           
                        MyIconButtonLeft:
                                source: "icons/duplicate.png"   
                                id: btn_duplicate
                                size_hint: 0.9, 0.9
                                text: "Duplicate"
                                text_size: self.width - dp(10), self.height - dp(10)
                                on_press: root.duplicate()
                        MyIconButtonLeft:
                                id: btn_guardar_parametros
                                size_hint: 0.9, 0.9
                                text: "Save"
                                on_press: root.save_parameters() 
                                source: "icons/check-circle.png"   
                        MyIconButtonLeft:
                                id: btn_cancelar_parametros
                                size_hint: 0.9, 0.9
                                text: "Cancel"
                                on_press: root.cancel_parameters() 
                                source: "icons/cancel.png"   
                                

<MyToggleButton>:
        id: MyToggleButton
        #orientation: "horizontal"
        spacing: 15
        Label:
                text_size: self.size
                text: root.label + ":"
                halign: 'center'
                valign: 'center' 
                size_hint: 1,0.1
        ToggleButton:
                id: text_1 
                text: root.text_1
                on_press: self.state = "down"
                on_release: root.state_change(self.id)
                

        ToggleButton:
                id: text_2
                text: root.text_2
                group: 'bool'
                state: 'down'
                on_press: self.state = "down"
                on_release: root.state_change(self.id)


<MySize>:
        id: MySize
        #orientation: "horizontal"
        spacing: 15
        Label:
                text_size: self.size
                text: root.text_label + ":"
                halign: 'center'
                valign: 'center' 
                size_hint: 0.4,0.1
        Label:
                text_size: self.size
                text: "("
                font_size: '20sp'
                halign: 'center'
                valign: 'center' 
                size_hint: 0.1,0.1
                bold: True 
        TextInput:
                id: text_input_1
                input_filter: root.input_type_1
                size_hint: 0.15,0.01
                text: str(root.value_1)
                multiline:False
        Label:
                text_size: self.size
                text: ","
                font_size: '20sp'
                halign: 'center'
                valign: 'center' 
                size_hint: 0.1,0.1
                bold: True 
        TextInput:
                id: text_input_2
                input_filter: root.input_type_2
                size_hint: 0.15,0.1
                text: str(root.value_2) 
                multiline:False
        Label:
                text_size: self.size
                text: ")"
                font_size: '20sp'
                halign: 'center'
                valign: 'center' 
                size_hint: 0.1,0.1
                bold: True 

<MyTextInput>:
        id: MyTextInput
        #orientation: "horizontal"
        spacing: 15
        Label:
                text_size: self.size
                text: root.text_label + ":"
                halign: 'center'
                valign: 'center'
                size_hint: 0.8,0.5
        TextInput:
                id: text_input
                input_filter: root.input_type
                size_hint: 0.2,0.5
                hint_text: str(root.value)
                halign: 'left'
                multiline:False
                

<MySlider>:
        id: myslider
        #orientation: "horizontal"
        halign: 'left'
        valign: 'left'
        Label:
                text: root.slider_label + ":"
        TextInput:
                id: textinput
                multiline: False
                input_filter: 'int'
                text: str(slider.value)
                on_text_validate:
                        if int(self.text)%2 == 0: slider.value = int(self.text)+1
                        else: slider.value = int(self.text)
                        root.slider_change(slider.value)
                        #MODIFICAR
                size_hint: 0.2,0.1
                halign: 'center'
                padding_y: [self.height / 2.0 - (self.line_height / 2.0) * len(self._lines), 0]

        BoxLayout:
                orientation: "vertical"
                spacing: 10
                Slider:
                        id: slider
                        value_track: True
                        value_track_color: [51/255,83/255,158/255,1]
                        min: root.minimum
                        max: root.maximum
                        step: root.step
                        value: root.value
                        #on_value: root.value = self.value #es lo mismo que hacer el slider_change
                        on_touch_move: root.slider_change(slider.value)
                        on_touch_down: root.slider_change(slider.value)
                        on_touch_up: root.slider_change(slider.value)
                        size_hint: 1,1   
                
                Label:
                        id: label
                        text: str(slider.value)
                BoxLayout:
                        orientation: "horizontal"

<MyImageSpinner>:

        Image:
                id:imageplan
                source: root.options.get(spinner.text)
                size_hint:1,1
        Spinner:
                id: spinner
                text: root.text
                values: root.options.keys()
                size_hint: 1, 1
                font_size: '12sp'


<MySpinner>:
        id: myspinner
        #orientation: "vertical"
        Label:
                text: root.spinner_label + ":"
                size_hint: 0.4,1
        Label:
                text: ""
                size_hint: 0.6,1  
        TextInput:
                id: textinput
                multiline: False
                text: (spinner.text)
                on_text_validate: root.get_code(self.text)
                size_hint: 0.4,1
                font_size: '12sp'
                halign: 'center'
                padding_y: [self.height / 2.0 - (self.line_height / 2.0) * len(self._lines), 0]

        SpinnerWidget:
                id: spinner
                background_normal: ''
                background_color: [51/255,83/255,158/255,1]
                text: root.text
                values: root.values
                size_hint: 0.6,1   
                font_size: '12sp'


<MyBubble>: #no se usa
        size_hint: (None, None)
        size: (100, 75)
        #pos_hint: {'x': 1, 'y': 1}
        BubbleButton:
                text: 'Delete'
                on_touch_down: print('touch')

<LoadDialog>:
        cols: 2
        id: load
        BoxLayout:
                size: root.size
                pos: root.pos
                orientation: "vertical"
                size_hint: 0.7,1

                Label:
                        text: "Choose path:"
                        size_hint_y: None
                        height: 20
                        halign: 'right'

                BoxLayout:
                        size_hint: 1,.1
                        TextInput:
                                id: path_input
                                size_hint_x: 0.7
                                size_hint_y: None
                                height: 30
                                multiline: False
                                text: "C:/Users/trini/Pictures"
                                #text:"C:/Users/Juliana/Downloads"
                                #El text esta puesto por comodidad para nosotras. 
                                #En un futuro deberiamos eliminarlo o dejar como ejemplo en hint_text
                                on_text_validate: load.new_path(path_input.text)
                                
                        #Button:
                        MyColorButton:
                                text: "OK"
                                size_hint_x: 0.2
                                size_hint_y: None
                                height: 30
                                #halign: 'right'
                                on_press: load.new_path(path_input.text)

                FileChooserIconView:
                        id: filechooser
                        filters: ['*.jpg', '*.png']
                        on_selection: load.selected(filechooser.selection)
                               

                BoxLayout:
                        size_hint: 1,.1
                        
                        MyIconButtonLeft:
                                text: "Save"
                                on_release: root.load(filechooser.path, filechooser.selection)
                                source: "icons/check-circle.png"   
                        MyIconButtonLeft:
                                text: "Cancel"
                                on_release: root.cancel()
                                source: "icons/cancel.png"
        
        Image:
                id: load_image
                size_hint: 0.5,1
                color: 0,0,0,0

<Popup_Extraer_Codigo>:
        Label:
                text: "The code was successfully exported"
                size_hint: None, None
                pos_hint: {"x":0.35, "top":1}

<Popup_Delete_Line>:
        BoxLayout:
                orientation:"vertical"
                #pos_hint: {"x":0.35, "top":1}
                pos_hint: {"x": 0, "top": 1}
                Label:
                        text: "Desea eliminar esta union?"
                        #size_hint: None, None
                        size_hint: 1, .3
                        valign: 'middle'
                        halign: 'center'
                BoxLayout:
                        orientation:"horizontal"
                        pos_hint: {'x':0}
                        size_hint: 1, .3                        
                        MyIconButtonLeft:
                                text: "Yes"
                                size_hint: .5, 1
                                on_press: root.mainfloat.delete_line(root.line)
                                source: "icons/check-circle.png"   
                        MyIconButtonLeft:
                                text: "Cancel"
                                size_hint: .5, 1
                                on_press: root.mainfloat.delete_line_popup.dismiss()
                                source: "icons/cancel.png"
<Save_Workspace_Button>:
        BoxLayout:
                orientation: 'vertical'
                TextInput:
                        id: filename_input
                        multiline: False
                        text: "saved_file"
                        on_text_validate: root.mainfloat.to_file(filename_input.text)
                                
                BoxLayout:
                        orientation: 'horizontal'
                        MyIconButtonLeft:
                                source: "icons/check-circle.png" 
                                text: "Save"
                                size_hint: .3,.9
                                on_press: root.mainfloat.to_file(filename_input.text)
                        MyIconButtonLeft:
                                source: "icons/cancel.png"
                                text: "Cancel"
                                size_hint: .3,.9
                                on_press: root.mainfloat.dismiss_extraer_popup()

<Save_Image_Button>:
        BoxLayout:
                orientation: 'vertical'
                BoxLayout:
                        orientation: 'horizontal'
                        TextInput:
                                id: filename_inp
                                multiline: False
                                text: "saved_images"
                                #on_text_validate: root.mainfloat.save_output_images(filename_inp.text)

                        MyColorButton:
                                text: "File Format:"
                                id: dd_btn
                                on_release: dropdown_ex.open(self)
                                on_parent: dropdown_ex.dismiss()
                                background_color: 51/255,83/255,158/255,1
                                DropDown:
                                        id: dropdown_ex
                                        size_hint_y: None
                                        height: '45dp'
                                        on_select: dd_btn.text = '{}'.format(args[1])
                                        
                                        MyColorButton:
                                                text: ".png"
                                                size_hint_y: None
                                                height: '48dp'
                                                on_release: dropdown_ex.select(".png")
                                        MyColorButton:
                                                text: ".jpg"
                                                size_hint_y: None
                                                height: '48dp'
                                                on_release: dropdown_ex.select(".jpg")
                                        MyColorButton:
                                                text: ".tif"
                                                size_hint_y: None
                                                height: '48dp'
                                                on_release: dropdown_ex.select(".tif")
                                        MyColorButton:
                                                text: ".bmp"
                                                size_hint_y: None
                                                height: '48dp'
                                                on_release: dropdown_ex.select(".bmp")    
                BoxLayout:
                        orientation: 'horizontal'
                        
                        MyIconButtonLeft:
                                text: "Save"
                                size_hint: .3,.9
                                on_press: root.mainfloat.save_output_images(filename_inp.text, dd_btn.text)
                                source: "icons/check-circle.png"   
                        MyIconButtonLeft:
                                text: "Cancel"
                                size_hint: .3,.9
                                on_press: root.mainfloat.dismiss_extraer_popup()
                                source: "icons/cancel.png"

<Export_Code_Button>:
        BoxLayout:
                orientation: 'vertical'
                TextInput:
                        id: filename_in
                        multiline: False
                        text: "saved_code"
                        on_text_validate: root.mainfloat.Export_Pipe_Code(filename_in.text)
                                       
                BoxLayout:
                        orientation: 'horizontal'
                        MyIconButtonLeft:
                                text: "Save"
                                size_hint: .3,.9
                                on_press: root.mainfloat.Export_Pipe_Code(filename_in.text)
                                source: "icons/check-circle.png"
                        MyIconButtonLeft:
                                text: "Cancel"
                                size_hint: .3,.9
                                on_press: root.mainfloat.dismiss_extraer_popup()
                                source: "icons/cancel.png"
                                
<Extension_Dropdown>: #no se usa
        Button:
                text: "File Format:"
                id: dd_btn
                on_release: dropdown_ex.open(self)
                on_parent: dropdown_ex.dismiss()
        DropDown:
                id: dropdown_ex
                size_hint_y: None
                height: '45dp'
                on_select: dd_btn.text = '{}'.format(args[1])
                
                Button:
                        text: ".png"
                        size_hint_y: None
                        height: '48dp'
                        on_release: dropdown_ex.select(".png")
                Button:
                        text: ".jpg"
                        size_hint_y: None
                        height: '48dp'
                        on_release: dropdown_ex.select(".jpg")
                Button:
                        text: ".tif"
                        size_hint_y: None
                        height: '48dp'
                        on_release: dropdown_ex.select(".tif")
                Button:
                        text: ".bmp"
                        size_hint_y: None
                        height: '48dp'
                        on_release: dropdown_ex.select(".bmp")                        

<ImageViewer>:
        do_default_tab: False
        tab_width: None

<MyWidget>:          
        BoxLayout:
                orientation: 'horizontal'
                canvas.before:                
                        Rectangle:
                                pos: self.pos
                                size: self.size    
                                source:"icons\\background_myscatter.png"
                Image:
                        id: view_image
                        source: ""
                        color: 0,1,0,1  
                        size_hint: .7,1
                BoxLayout:
                        orientation: 'vertical'
                        size_hint: .3,1
                        spacing: 2
                        canvas.before:                
                                Rectangle:
                                        pos: self.pos
                                        size: self.size    
                                        source:"icons\\background_myscatter.png"
                        Label:
                                pos_hint: {"x":0, "top": 0}
                                text: root.text
                                markup: True
                                size_hint: .97,.25
                        Label:
                                size_hint: .97,.05
                                pos_hint: {"center_x": 0.5, "top": 0}
                                text: "Zoom:"
                                bold: True
                                font_size:'15sp'
                        StencilBox:
                                id: box_zoom_im
                                pos_hint: {"center_x": 0.5}
                                size_hint: 0.97,0.5

                                MyScatterPlane:
                                        do_rotation: False
                                        size_hint: 1,1
                                        Image:
                                                id: view_image_z
                                                source: ""
                                                color: 0,1,0,1  
                                                size_hint: 1,1
                                                size: box_zoom_im.size 
                                                #size: 500,500                                                
                        MyColorButton:
                                pos_hint: {"center_x": 0.5}
                                id: histogram
                                text: "View Histogram"
                                size_hint: .97,.1
                                on_release: root.view_histogram()
                        MyColorButton:
                                pos_hint: {"center_x": 0.5}
                                id: save_image_button
                                text: "Save Image"
                                size_hint: .97,.1
                                on_release: root.mainfloat.show_extraer_popup('Save Image')                       

<MyCheckBox>:
        width: self.parent.width if self.parent else 0
        height: dp(26)
        font_size: '15sp'
        cols: 2
        Label:
                text: root.parameter_text
                padding: dp(10), 0
                valign: 'middle'
                halign: 'left'
                size_hint: None, 1
                font_size: '16'                
        CheckBox:
                active: root.active
                halign: 'right'
                on_active: root.on_checkbox_active(self.active)

<MyColorButton@Button>:
        background_normal: ''
        background_down: ''
        background_disabled_normal: ""
        background_disabled_down: ""
        background_color: 51/255,83/255,158/255,1
        font_size: 12
        text_size: self.size     
        halign: 'center'
        valign: 'center'

<MyIconButton>:
        #on_press: self.background_color = (0, 0, 0, 0)
        #on_release: self.background_color = (0, 0, 0, 0)
        background_normal: ''
        background_down: ''
        background_disabled_normal: ""
        background_disabled_down: ""
        background_color: 0, 0, 0, 0
        #background_color: (0.2, 0.71, 0.9, 1) if self.state == 'down' else (0.2, 0.2, 0.2, 1.0)
        font_size: 12
        text_size: self.size     
        halign: 'center'
        valign: 'bottom'
        padding_y: 5
        Image:
                id: image
                source: root.source
                center_x: self.parent.center_x
                center_y: self.parent.center_y
                size: 25,25
                #allow_stretch: True

<MyIconButtonLeft>:
        #on_press: self.background_color = (0, 0, 0, 0)
        #on_release: self.background_color = (0, 0, 0, 0)
        background_normal: ''
        background_down: ''
        background_disabled_normal: ""
        background_disabled_down: ""
        background_color: 51/255,83/255,158/255,1
        #background_color: (0.2, 0.71, 0.9, 1) if self.state == 'down' else (0.2, 0.2, 0.2, 1.0)
        font_size: 12
        text_size: self.size     
        halign: 'center'
        valign: 'center'
        #padding_y: 5
        Image:
                id: image
                source: root.source
                center_x: self.parent.center_x - 34
                center_y: self.parent.center_y
                size: 25,25
                #allow_stretch: True

<MyInputButton>:
        on_press: self.background_color = (0, 0, 0, 0)
        on_release: self.background_color = (0, 0, 0, 0)
        background_normal: ''
        background_down: ''
        background_disabled_normal: ""
        background_disabled_down: ""
        background_color: 0, 0, 0, 0
        #background_color: (0.2, 0.71, 0.9, 1) if self.state == 'down' else (0.2, 0.2, 0.2, 1.0)
        font_size: 12
        text_size: self.size     
        halign: 'center'
        valign: 'bottom'
        padding_y: 5
        Image:
                source: root.source
                center_x: self.parent.center_x
                center_y: self.parent.center_y
                size: 25,25
                #allow_stretch: True

<MyDropButton>: #no se usa
        background_normal: ''
        background_down: ''
        background_disabled_normal: ""
        background_disabled_down: ""
        background_color: (0.2, 0.71, 0.9, 1) if self.state == 'down' else (0.15, 0.15, 0.15, 1.0)

<MyParameterButton>:
        background_normal: ''
        background_down: ''
        background_disabled_normal: ""
        background_disabled_down: ""
        background_color: 0, 0, 0, 0
        on_press: self.background_color = (0, 0, 0, 0)
        on_release: self.background_color = (0, 0, 0, 0)
        Image:
                id: param_imag
                source: ""
                center_x: self.parent.center_x
                center_y: self.parent.center_y
                size: 25,25
                #allow_stretch: True

<MyLabel>:
        background_color: 0, 0, 0, 0
        canvas.before:
                Color:
                        rgba: self.background_color
                Rectangle:
                        size: self.size
                        pos: self.pos
        #text properties
        color: 1, 1, 1, 1
        #outline_color: 0,0,0
        #outline_width: 1        

<DDButton@RoundedButton>:
        size_hint_y: None
        height: '30dp'
        # Double .parent because dropdown proxies add_widget to container
        on_release: self.parent.parent.select(self.text)
        background_color: 0,0,0,0

<DDTextInput>:
        canvas.before:                
                Color:
                        rgba: 165/255,103/255,142/255,0.5
                RoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [8]
                Color:
                        rgba: 165/255,103/255,142/255,0.5
                        #root.line_color
                Line:
                        width: 0.5
                        rounded_rectangle: self.x, self.y, self.width, self.height, 8, 100
        size_hint_y: None
        height: '30dp'
        # Double .parent because dropdown proxies add_widget to container
        #on_release: self.parent.parent.select(self.text)
        background_color: 0,0,0,0
        halign: 'center'

<DDToolbar_Button@RoundedButton>:
        size_hint_y: None
        height: '30dp'
        line_color: 1,1,1,1
        background_normal: ''
        background_down: ''
        background_color: 0,0,0,0
        color: 0.5, 0.5, 0.5, 0.5
        
        #background_color: (0.2, 0.71, 0.9, 1) if self.state == 'down' else (0.2, 0.2, 0.2, 1.0)

<RoundedButton>:
        #background_color: 150/255,78/255,194/255,0.5
        canvas.before:                
                Color:
                        rgba: 165/255,103/255,142/255,0.5
                RoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [8]
                Color:
                        rgba: 165/255,103/255,142/255,0.5
                        #root.line_color
                Line:
                        width: 0.5
                        rounded_rectangle: self.x, self.y, self.width, self.height, 8, 100




                        
